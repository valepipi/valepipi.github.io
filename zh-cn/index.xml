<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>游泳小狗</title>
    <link>https://valepipi.github.io/zh-cn/</link>
    <description>Recent content on 游泳小狗</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Jan 2023 22:00:57 +0800</lastBuildDate><atom:link href="https://valepipi.github.io/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cuda编程</title>
      <link>https://valepipi.github.io/zh-cn/posts/cuda/</link>
      <pubDate>Tue, 24 Jan 2023 22:00:57 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/posts/cuda/</guid>
      <description>Cuda并行编程Cuda存储结构Global memory： 可读可写，最大最慢，所有Block共享，通常所说32G的GPU指的是global memory=32G Constant memory: 只读，所有Block共享 Texture memory: 只读，所有Block共享 GPU通过以上三种memory与Host上的memory交互 cudaMemcpy()
Shared memory: 可读可写，很快，较小，一个block内的Thread共享 Local memory: 可读可写，很快，很小，Thread专用 Registers: 可读可写，很快，很小，Thread专用 Cuda线程结构Grid:一组线程块(block) block：一组线程(thread) thread Cuda编程模型的关键术语host: CPU device: GPU host memory: 系统的内存 device memory：gpu卡上的存储器 kernels: GPU函数，由host发出，由device执行 device function: GPU函数，device执行，并且只能被device调用 </description>
    </item>
    
    <item>
      <title>爱好</title>
      <link>https://valepipi.github.io/zh-cn/projects/</link>
      <pubDate>Mon, 23 Jan 2023 18:09:07 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/projects/</guid>
      <description>⚽运动慢跑 足球 羽毛球 游泳 爬山 📀播客翻转电台FlipRadio 维生素E|经济学与哲学知识分享 声东击西 喷嚏 牛油果烤面包 随机波动 梁文道·八分 🎞️书影音哈佛公开课《Justice》
余华《活着》《许三观卖血记》《兄弟》
余秋雨《霜冷长河》
刘墉系列
三毛系列
《未来简史》
🚀旅行长沙 福建 厦门 广州 </description>
    </item>
    
    <item>
      <title>联系我</title>
      <link>https://valepipi.github.io/zh-cn/contact/</link>
      <pubDate>Mon, 23 Jan 2023 18:07:56 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/contact/</guid>
      <description>📧邮箱： savoki163@163.com</description>
    </item>
    
    <item>
      <title>💗关于我</title>
      <link>https://valepipi.github.io/zh-cn/about/</link>
      <pubDate>Mon, 23 Jan 2023 18:07:44 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/about/</guid>
      <description>教育经历硕士: 2021.09 ~ 2024.06 | 💜深圳大学🤍 | 计算机科学与技术 本科: 2017.09 ~ 2021.06 | 💚武汉科技大学🤍 | 信息安全 专业技能Python、C++、Java、SQL基本语法 Pytorch深度学习框架，源码阅读和应用 git协作开发、markdown文档 Pandas、Numpy数据处理，PowerBi搭建可视化看板 证书奖项CET6 软考中级-软件设计师 研究生：一等奖学金×2 本科：国家励志奖学金 二等奖学金×2 实习经历2022.8 ~ 2022.12 | 💙字节跳动🤍 | AILab算法框架实习生 智能语音引擎的高性能深度学习训练框架开发
科研经历</description>
    </item>
    
    <item>
      <title>🐰LeetCode Hot100 题解</title>
      <link>https://valepipi.github.io/zh-cn/posts/leetcode/</link>
      <pubDate>Sat, 21 Jan 2023 19:57:59 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/posts/leetcode/</guid>
      <description>😃数学问题1. 两数之和给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 你可以按任意顺序返回答案。
输入：nums = [2,7,11,15], target = 9 输出：[0,1] 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: &amp;#34;&amp;#34;&amp;#34; 1. 暴力查找O(n^2) 2. 利用dict反查O(n) &amp;#34;&amp;#34;&amp;#34; # n = len(nums) # for i in range(n): # for j in range(i + 1, n): # if nums[i] + nums[j] == target: # return [i ,j] # return [] dict = {} for i in range( len(nums) ): if target - nums[i] not in dict: dict[nums[i]] = i #建立反查表 else: return [dict[target-nums[i]], i] 88.</description>
    </item>
    
    <item>
      <title>SQL题目</title>
      <link>https://valepipi.github.io/zh-cn/posts/sql%E9%A2%98%E7%9B%AE/</link>
      <pubDate>Mon, 27 Jun 2022 18:57:30 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/posts/sql%E9%A2%98%E7%9B%AE/</guid>
      <description>题目1：⛺查询并计算留存率留存率：留存用户数/总用户数 留存用户：第一天登录，且第二天也登录的用户 四舍五入保留3位小数：round(原始数字，3) 根据得到后一天的日期：DATE_ADD(当天日期yy-mm-dd, INTERVAL 1 DAY) 登录的第一天： min(date) Select round(count(distinct user_id)*1.0/(select count(distinct user_id) from login) ,3) from login where (user_id,date) in (select user_id, DATE_ADD(min(date),INTERVAL 1 DAY) from login group by user_id) </description>
    </item>
    
    <item>
      <title>搭建个人博客</title>
      <link>https://valepipi.github.io/zh-cn/posts/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 27 Jun 2022 18:21:48 +0800</pubDate>
      
      <guid>https://valepipi.github.io/zh-cn/posts/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>Hugo+Github搭建博客 参考链接：
Github Pages + Hugo 搭建个人博客
配置主题：
Hugo-Coder主题配置
美化：
插入emoji
更新博客： 先 cd 到 myblog/content 目录下，然后写 md 文章 写好以后，cd 到myblog 下执行 hugo 命令重新生成 public 文件 再cd 进 myblog/public 中，然后执行 git 提交命令提交到 github 即可 # 1.新建一篇文章，在网站根目录：H:\HugoWebsite\blog hugo new posts/测试博客.md # 2.在目录 H:\HugoWebsite\blog\content\posts 下找到对应文件进行修改 # 3.本地预览, http://localhost:1313/ hugo server -D # 4.构建 Hugo 网站 hugo # 5.切换到目录 H:\HugoWebsite\blog\public ，提交修改至本地库 git add . git commit -m &amp;#39;commit info&amp;#39; # 6.将修改推至远程库 git push -u origin master </description>
    </item>
    
  </channel>
</rss>
